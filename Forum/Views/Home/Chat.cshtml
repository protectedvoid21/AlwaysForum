@model IEnumerable<Message>

<style>
    .message-container {
        width: 100%;
        height: 500px;
        background-color: #e3e3e3;
        padding: 5px;
    }

    .message-list {
        list-style: none;
        margin: 5px;
    }

    .message {
        background-color: #b8fbff;
        border-radius: 3px;
        margin: 3px;
        padding: 5px;
    }
</style>

<h1 class="text-center">Shoutbox</h1>
<hr/>
<div class="message-container border-2">
    <div class="message-list">
        @foreach (var message in Model) {
            <div class="message">
                @message.SendDate 
                <a asp-controller="User" asp-action="Profile" asp-route-userId="@message.AuthorId">@message.Author.UserName</a>
                 @message.Text 
            </div>
        }
    </div>
</div>
<div class="border-1 d-flex">
    <input id="message-input" class="form-control" placeholder="Write message"/>
    <btn id="send-button" class="btn btn-success w-25">Send</btn>
</div>

@section Scripts {
    <script>
        let connection = new signalR.HubConnectionBuilder().withUrl('/chathub').build()
        const messageInput = document.getElementById('message-input')

        document.getElementById('send-button').disabled = true

        connection.on('ReceiveMessage',
            function(message) {
                const listMessage = document.createElement("div")
                listMessage.classList.add('message')

                document.querySelector('.message-list').appendChild(listMessage)
                const convertedHtml = `${message.sendDate} <a href="/User/Profile?userId=${message.authorId}">${message.authorName}</a> ${message.text}`
                listMessage.innerHTML = convertedHtml
            })

        connection.start().catch((err) => {
            return console.error(err.toString())
        })

        document.getElementById('send-button').addEventListener('click',
            () => {
                const message = messageInput.value
                messageInput.value = ''

                connection.invoke('SendMessage', message).catch((err) => {
                    return console.error(err.toString())
                })
            })
    </script>
}