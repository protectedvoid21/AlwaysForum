@using AlwaysForum.Extensions
@model Data.ViewModels.UserProfileViewModel

<style>
    .avatar {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .avatar-container {
        width: 100px;
        height: 100px;
        border: 4px solid #bbbbbb;
        position: relative;
    }

    .change-profile {
        transition: .5s ease;
        opacity: 0;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        text-align: center;
    }

    .avatar-container:hover { background-color: #777777; }

    .avatar-container:hover .change-profile { opacity: 1; }
</style>

<div id="change-profile-component" class="popup">
    <div class="component-container">
        @await Component.InvokeAsync("ChangeProfilePicture", Model.ProfilePicture)
    </div>
</div>

<div class="d-flex gap-4 m-3">
    <div class="avatar-container">
        @if (string.IsNullOrEmpty(Model.ProfilePicture)) {
            <img src="/images/default-picture.svg" class="avatar">
        }
        else {
            <img src="/images/userpictures/@Model.ProfilePicture" class="avatar">
        }
        <div class="change-profile">
            <btn class="btn btn-info">Change avatar</btn>
        </div>
    </div>
    <div>
        <h2>@Model.UserName</h2>
        <p>Registered : @Model.CreatedDate</p>
    </div>
    @if (User.GetId() == Model.Id) {
        <a asp-controller="Account" asp-action="ChangePassword" class="btn btn-primary">Change password</a>
    }
</div>
<hr/>
<p>Posts : @Model.PostCount</p>

@section Scripts {
    <script>
        const changeProfilePictureButton = document.querySelector('.change-profile')
        const closeProfileChange = document.querySelector('.close')
        
        const changeProfileComponent = document.getElementById('change-profile-component')

        changeProfilePictureButton.addEventListener('click', () => {
            changeProfileComponent.style.display = 'block'
        })

        closeProfileChange.addEventListener('click', () => {
            changeProfileComponent.style.display = 'none'
        })
    </script>
}